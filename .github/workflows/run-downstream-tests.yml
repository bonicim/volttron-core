name: Start downstream tests

on:
  push:
    branches:
      - main
      - develop
      - releases/**
    paths:
      - '**.py'
      - '**.yml'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - '**.py'


jobs:

  dispatch:
    runs-on: ubuntu-20.04
    
    env:
      LANG: en_US.utf-8
      LC_ALL: en_US.utf-8
      PYTHON_VERSION: '3.8'
      OWNER: bonicim

    strategy:
      matrix:
        repo: [ '${{ env.OWNER }}/volttron-openadr-ven', '${{ env.OWNER }}/volttron-listener-agent' ]

    steps:
        - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
        - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
        - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

        #----------------------------------------------
        #       check-out repo and set-up python
        #----------------------------------------------
        - name: Checkout code
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Set up Python ${{ env.PYTHON_VERSION }}
          id: setup-python
          uses: actions/setup-python@v2
          with:
            python-version: ${{ env.PYTHON_VERSION }}

        #----------------------------------------------
        #  -----  install & configure poetry  -----
        #----------------------------------------------
        - name: Install Poetry
          uses: snok/install-poetry@v1
          with:
            virtualenvs-create: true
            virtualenvs-in-project: true
            installer-parallel: true

        #----------------------------------------------
        # install your root project, if required
        #----------------------------------------------
        - name: Install library
          run: poetry install --no-interaction

        - name: Create build artifacts
          run: |
            poetry build -vvv

        - name: Check if wheels were built
          run: |
            ls -lh dist

        - name: Upload wheels as artifact
          uses: actions/upload-artifact@v2
          with:
            name: dist
            path: dist

        - name: Repository Dispatch
          uses: peter-evans/repository-dispatch@v1.1.3
          with:
            token: ${{ secrets.ACTION_HOOK_TOKEN }}
            repository: ${{ matrix.repo }}
            event-type: downstream-testing
            client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}", "repository": "${{ github.repository }}", "api_url": "${{ github.api_url }}" }'


